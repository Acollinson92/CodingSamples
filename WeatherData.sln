using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.ServiceModel;
using WeatherData.ServiceReference;
using System.Xml.Serialization;
using System.IO;

namespace WeatherData
{
    public partial class Form1 : Form
    {
        internal Cities.NewDataSet cn;
        public Form1()
        {
            InitializeComponent();

            BasicHttpBinding binding = new BasicHttpBinding();
            binding.MaxReceivedMessageSize = 20000000;

            EndpointAddress address = new EndpointAddress("http://www.webservicex.net/globalweather.asmx?WSDL");

            GlobalWeatherSoapClient gwsc = new GlobalWeatherSoapClient(binding, address);

            var cities = gwsc.GetCitiesByCountry("");

            XmlSerializer result = new XmlSerializer(typeof(Cities.NewDataSet));

            cn = (Cities.NewDataSet)result.Deserialize(new StringReader(cities));

            var countries = cn.Table.Select(m => m.Country).Distinct();

            comboBoxCountries.Items.AddRange(countries.ToArray());

            

        }

        private void comboBoxCountries_SelectedIndexChanged(object sender, EventArgs e)
        {
            var rr = cn.Table.Where(m => m.Country == comboBoxCountries.Text).Select(c => c.City);

            comboBoxCities.Items.Clear();
            comboBoxCities.Items.AddRange(rr.ToArray());

        }

        private void comboBoxCities_SelectedIndexChanged(object sender, EventArgs e)
        {
            BasicHttpBinding binding = new BasicHttpBinding();
            EndpointAddress address = new EndpointAddress("http://www.webservicex.net/globalweather.asmx?WSDL");

            GlobalWeatherSoapClient gwsc = new GlobalWeatherSoapClient(binding, address);

            var weather = gwsc.GetWeather(comboBoxCities.Text, comboBoxCountries.Text);

            if (weather != "Data Not Found")
            {
                richTextBoxWeatherDetails.Clear();

                XmlSerializer result = new XmlSerializer(typeof(Weather.CurrentWeather));
                var w = (Weather.CurrentWeather)result.Deserialize(new StringReader(weather));

                for (int i = 0; i < w.ItemsElementName.Length; i++) {
                    richTextBoxWeatherDetails.Text += w.ItemsElementName[i] 
                        + ": " + w.items[i] + "\r\n";

                }

            }
            else {
                richTextBoxWeatherDetails.Clear();
                richTextBoxWeatherDetails.Text = "Data Not Found";
            }
        }

        private void Form1_Load(object sender, EventArgs e)
        {

        }
    }
}
